package uk.co.primaltech.stockmanagement.GUI.product;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.net.URL;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import uk.co.primaltech.stockmanagement.GUI.Search.SearchTabManager;
import uk.co.primaltech.stockmanagement.GUI.main.MainWindow;
import uk.co.primaltech.stockmanagement.GUI.main.TabManager;
import uk.co.primaltech.stockmanagement.database.DBInsert;
import uk.co.primaltech.stockmanagement.database.DBUpdate;
import uk.co.primaltech.stockmanagement.product.Brand;
import uk.co.primaltech.stockmanagement.product.Product;
import uk.co.primaltech.stockmanagement.product.Supplier;

/**
 *
 * @author Nuno Mogas <nuno.mogas@gmail.com>
 */
public class ProductEntry extends javax.swing.JDialog implements Runnable {

    private static volatile ProductEntry instance = null;

    private Product product;

    private static boolean isNew;

    public static ProductEntry getInstance(boolean isNew) {
        if (instance == null) {
            synchronized (ProductEntry.class) {
                if (instance == null) {
                    instance = new ProductEntry();
                    instance.setPreferredSize(new Dimension(320, 350));
                    instance.initComponents();

                    /* Make windows always on top */
                    instance.setModal(true);

                    instance.setDefaultCloseOperation(DISPOSE_ON_CLOSE);

                    setDefaultLookAndFeelDecorated(true);

                    /* Center the window. */
                    instance.setLocationRelativeTo(null);

                    /* Not resize window allowed */
                    instance.setResizable(false);

                    /* load add image as icon */
                    URL logoURL = MainWindow.class.getResource("/add.png");
                    ImageIcon logoicon = new ImageIcon(Toolkit.getDefaultToolkit().getImage(logoURL).getScaledInstance(25, 25, 100));

                    /* Add custom image to add custom brand "button" */
                    instance.jAddBrandButton.setIcon(logoicon);
                    instance.jAddBrandButton.setText("");

                    /* Add custom image to add custom supplier "button" */
                    instance.jAddSupplierButton.setIcon(logoicon);
                    instance.jAddSupplierButton.setText("");

                    /* force the use of graphical editor to set dates */
                    instance.jDateIN.getDateEditor().setEnabled(false);
                    instance.jDateOUT.getDateEditor().setEnabled(false);

                    /* Add default brands*/
                    ProductEntryController.getInstance().addDefaultBrands();

                    /* Add default suppliers*/
                    ProductEntryController.getInstance().addDefaultSuppliers();
                }
            }
        }
        ProductEntry.isNew = isNew;
        instance.LoadwindowType();
        return instance;
    }

    private void LoadwindowType() {
        if (isNew) {
            instance.setTitle("New Product Entry");
            product = null;
            resetFields();
        } else {
            instance.setTitle("Edit Product Entry");
            if (TabManager.getInstance().getSelectedTab() instanceof SearchTabManager) {
                product = ((SearchTabManager) TabManager.getInstance()).getActiveSearchTab().getProduct();
                instance.jProductName.setText(product.getProductName());
                instance.jSerial.setText(product.getSerial());
                instance.jDateIN.setDate(product.getDateIN());
                instance.jDateOUT.setDate(product.getDateOUT());
                instance.jBought.setText(product.getPrice());
                instance.jComboBrand.setSelectedItem(product.getBrand());
                instance.jComboSupplier.setSelectedItem(product.getSupplier());
            } else {
                dispose();
                return;
            }
        }
        /* Start a thread instance of this GUI. */
        new Thread(instance).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMainContent = new javax.swing.JPanel();
        jLabelProductName = new javax.swing.JLabel();
        jLabelBrand = new javax.swing.JLabel();
        jLabelSerial = new javax.swing.JLabel();
        jLabelSupplier = new javax.swing.JLabel();
        jLabelDateIN = new javax.swing.JLabel();
        jLabelDateOUT = new javax.swing.JLabel();
        jLabelPrice = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jProductName = new javax.swing.JTextField();
        jSerial = new javax.swing.JTextField();
        jBought = new javax.swing.JTextField();
        jComboSupplier = new javax.swing.JComboBox();
        jComboBrand = new javax.swing.JComboBox();
        jDateIN = new com.toedter.calendar.JDateChooser();
        jDateOUT = new com.toedter.calendar.JDateChooser();
        jAddBrandButton = new javax.swing.JLabel();
        jAddSupplierButton = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jMainContent.setPreferredSize(new java.awt.Dimension(290, 304));

        jLabelProductName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelProductName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelProductName.setText("Product Name:");
        jLabelProductName.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabelProductName.setInheritsPopupMenu(false);

        jLabelBrand.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelBrand.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelBrand.setText("Brand:");
        jLabelBrand.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabelBrand.setInheritsPopupMenu(false);

        jLabelSerial.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSerial.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelSerial.setText("Serial:");
        jLabelSerial.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabelSerial.setInheritsPopupMenu(false);

        jLabelSupplier.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSupplier.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelSupplier.setText("Supplier:");
        jLabelSupplier.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabelSupplier.setInheritsPopupMenu(false);

        jLabelDateIN.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelDateIN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelDateIN.setText("Date in:");
        jLabelDateIN.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabelDateIN.setInheritsPopupMenu(false);

        jLabelDateOUT.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelDateOUT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelDateOUT.setText("Date out:");
        jLabelDateOUT.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabelDateOUT.setInheritsPopupMenu(false);

        jLabelPrice.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelPrice.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelPrice.setText("Bought price (Â£):");
        jLabelPrice.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLabelPrice.setInheritsPopupMenu(false);

        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("*");

        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("*");

        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("*");

        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("*");

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("*");

        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("*");

        jAddBrandButton.setText("newBrand");
        jAddBrandButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAddBrandButtonMouseClicked(evt);
            }
        });

        jAddSupplierButton.setText("newSuppler");
        jAddSupplierButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAddSupplierButtonMouseClicked(evt);
            }
        });

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jMainContentLayout = new javax.swing.GroupLayout(jMainContent);
        jMainContent.setLayout(jMainContentLayout);
        jMainContentLayout.setHorizontalGroup(
            jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMainContentLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jMainContentLayout.createSequentialGroup()
                        .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabelProductName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jMainContentLayout.createSequentialGroup()
                                    .addGap(42, 42, 42)
                                    .addComponent(jLabelBrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jMainContentLayout.createSequentialGroup()
                                    .addGap(9, 9, 9)
                                    .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jMainContentLayout.createSequentialGroup()
                                            .addGap(21, 21, 21)
                                            .addComponent(jLabelDateOUT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jMainContentLayout.createSequentialGroup()
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabelDateIN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jMainContentLayout.createSequentialGroup()
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabelSupplier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jMainContentLayout.createSequentialGroup()
                                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(0, 0, Short.MAX_VALUE))
                                                .addGroup(jMainContentLayout.createSequentialGroup()
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabelSerial, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                            .addComponent(jLabelPrice))
                        .addGap(18, 18, 18)
                        .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSerial)
                            .addComponent(jProductName)
                            .addComponent(jBought)
                            .addGroup(jMainContentLayout.createSequentialGroup()
                                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboSupplier, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jDateOUT, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(jDateIN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jAddSupplierButton))
                            .addGroup(jMainContentLayout.createSequentialGroup()
                                .addComponent(jComboBrand, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jAddBrandButton))))
                    .addGroup(jMainContentLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addGap(10, 10, 10))
        );
        jMainContentLayout.setVerticalGroup(
            jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMainContentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelProductName)
                    .addComponent(jLabel8)
                    .addComponent(jProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelBrand)
                        .addComponent(jLabel9)
                        .addComponent(jComboBrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jAddBrandButton))
                .addGap(18, 18, 18)
                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(jSerial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelSerial))
                .addGap(18, 18, 18)
                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jAddSupplierButton)
                    .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jComboSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelSupplier))
                .addGap(18, 18, 18)
                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelDateIN)
                        .addComponent(jLabel12))
                    .addComponent(jDateIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateOUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDateOUT))
                .addGap(18, 18, 18)
                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPrice)
                    .addComponent(jLabel14)
                    .addComponent(jBought, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jMainContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jMainContent, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jMainContent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        resetFields();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        product = new Product(jProductName.getText(),
                jComboBrand.getSelectedItem().toString(),
                jSerial.getText(),
                jComboSupplier.getSelectedItem().toString(),
                jDateIN.getDate(),
                jDateOUT.getDate(),
                jBought.getText(),
                "n/a");

        ProductFieldErrorControl errControll = ProductEntryController.getInstance().checkProduct(product);
        setLabelsDefaultColor();

        switch (errControll) {
            case ERROR_BRAND:
                jLabelBrand.setForeground(Color.red);
                break;
            case ERROR_DATE_IN:
                jLabelDateIN.setForeground(Color.red);
                break;
            case ERROR_DATE_OUT:
                jLabelDateOUT.setForeground(Color.red);
                break;
            case ERROR_PRICE:
                jLabelPrice.setForeground(Color.red);
                break;
            case ERROR_PRODUCT_NAME:
                jLabelProductName.setForeground(Color.red);
                break;
            case ERROR_SERIAL:
                jLabelSerial.setForeground(Color.red);
                break;
            case ERROR_SUPPLIER:
                jLabelSupplier.setForeground(Color.red);
                break;
            case SUCCESS:
                //release components                                
                this.dispose();

                if (isNew) {
                    //write data to database
                    int id;
                    if ((id = DBInsert.newProduct(product)) == -1) {
                        JOptionPane.showMessageDialog(null, "<html>Could not save data.. Something went wrong :(<html>", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        product.setDbID(id);
                        JOptionPane.showMessageDialog(null, "<html>Data successful saved!<html>", "Success", JOptionPane.INFORMATION_MESSAGE);                        

                        //open product info tab (same as search)
                        TabManager.getInstance().addSearchTab(product);
                    }

                } else {
                    //update database!
                    if (!DBUpdate.updateProduct(product)) {
                        JOptionPane.showMessageDialog(null, "<html>Could not save data.. Something went wrong :(<html>", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "<html>Data successful edited!<html>", "Success", JOptionPane.INFORMATION_MESSAGE);
                        /* ??????? not a good solution */
                        TabManager.getInstance().removeSearchTab();

                        //open product info tab (same as search)
                        TabManager.getInstance().addSearchTab(product);
                    }
                }

                //reset fields label
                resetFields();

                break;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jAddBrandButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAddBrandButtonMouseClicked
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                String newBrand = JOptionPane.showInputDialog(null, "Please enter the new brand name: \n", "");
                newBrand = newBrand.replaceAll(" ", "");
                if (containItem(jComboBrand, newBrand.toUpperCase())) {
                    JOptionPane.showMessageDialog(null, "<html>The brand <b>\"" + newBrand.toUpperCase() + "\"</b> already exists!<html>", "Warning", JOptionPane.INFORMATION_MESSAGE);
                } else if (newBrand.isEmpty()) {
                } else {
                    //add to GUI and to FILE
                    Brand.getInstance().addBrand(newBrand.toUpperCase());
                    jComboBrand.addItem(newBrand.toUpperCase());
                    JOptionPane.showMessageDialog(null, "<html>Brand <b>\"" + newBrand.toUpperCase() + "\"</b> successful added!<html>", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        });
    }//GEN-LAST:event_jAddBrandButtonMouseClicked
    private boolean containItem(JComboBox cb, Object item) {
        for (int index = 0; index < cb.getItemCount(); index++) {
            if (item.equals(cb.getItemAt(index))) {
                return true;
            }
        }
        return false;
    }
    private void jAddSupplierButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAddSupplierButtonMouseClicked
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                String newSupplier = JOptionPane.showInputDialog(null, "Please enter the new supplier name: \n", "");
                newSupplier = newSupplier.replaceAll(" ", "");
                if (containItem(jComboSupplier, newSupplier.toUpperCase())) {
                    JOptionPane.showMessageDialog(null, "<html>The supplier <b>\"" + newSupplier.toUpperCase() + "\"</b> already exists!<html>", "Warning", JOptionPane.INFORMATION_MESSAGE);
                } else if (newSupplier.isEmpty()) {
                } else {
                    //add to GUI and to FILE
                    Supplier.getInstance().addSupplier(newSupplier.toUpperCase());
                    jComboSupplier.addItem(newSupplier.toUpperCase());
                    JOptionPane.showMessageDialog(null, "<html>Supplier <b>\"" + newSupplier.toUpperCase() + "\"</b> successful added!<html>", "Success", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        });
    }//GEN-LAST:event_jAddSupplierButtonMouseClicked

    public JComboBox getjComboBrand() {
        return jComboBrand;
    }

    public JComboBox getjComboSupplier() {
        return jComboSupplier;
    }

    @Override
    public void setVisible(boolean flag) {
        setLabelsDefaultColor();
        super.setVisible(flag);
    }

    private void setLabelsDefaultColor() {
        jLabelBrand.setForeground(Color.BLACK);
        jLabelDateIN.setForeground(Color.BLACK);
        jLabelDateOUT.setForeground(Color.BLACK);
        jLabelPrice.setForeground(Color.BLACK);
        jLabelProductName.setForeground(Color.BLACK);
        jLabelSerial.setForeground(Color.BLACK);
        jLabelSupplier.setForeground(Color.BLACK);
    }

    private void resetFields() {
        jProductName.setText("");

        jComboBrand.setSelectedIndex(0);

        jSerial.setText("");

        jComboSupplier.setSelectedIndex(0);

        jDateIN.setDate(Calendar.getInstance().getTime());
        jDateIN.setDateFormatString("dd-MMM-yyyy");

        jDateOUT.setDate(null);

        jBought.setText("");

        setLabelsDefaultColor();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAddBrandButton;
    private javax.swing.JLabel jAddSupplierButton;
    private javax.swing.JTextField jBought;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBrand;
    private javax.swing.JComboBox jComboSupplier;
    private com.toedter.calendar.JDateChooser jDateIN;
    private com.toedter.calendar.JDateChooser jDateOUT;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBrand;
    private javax.swing.JLabel jLabelDateIN;
    private javax.swing.JLabel jLabelDateOUT;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JLabel jLabelProductName;
    private javax.swing.JLabel jLabelSerial;
    private javax.swing.JLabel jLabelSupplier;
    private javax.swing.JPanel jMainContent;
    private javax.swing.JTextField jProductName;
    private javax.swing.JTextField jSerial;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        /* Avoid accessing this method when it was already called. */
        if (Thread.currentThread().isAlive()) {
            return;
        }
        boolean isAlive = true;

        while (isAlive) {
            synchronized (this) {
                try {
                    wait();
                } catch (InterruptedException ex) { //TODO: excepÃ§oes
                    Logger.getLogger(ProductEntry.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        /* End this thread. */
    }
}
